version: '3.8'

services:
  # MQTT Broker (Mosquitto)
  mosquitto:
    image: eclipse-mosquitto:2.0.18
    hostname: mosquitto
    container_name: mqtt-mosquitto
    ports:
      - "1883:1883"   # MQTT default port
      - "9001:9001"   # WebSocket port
    volumes:
      - ./mosquitto/config:/mosquitto/config
      - ./mosquitto/data:/mosquitto/data
      - ./mosquitto/log:/mosquitto/log
    command: mosquitto -c /mosquitto/config/mosquitto.conf
    healthcheck:
      test: ["CMD", "mosquitto_pub", "-h", "localhost", "-t", "test", "-m", "test"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

  # MQTT Explorer (Web-based MQTT client)
  # mqtt-explorer:
  #   image: ghcr.io/thomasnordquist/mqtt-explorer:latest
  #   container_name: mqtt-explorer
  #   depends_on:
  #     mosquitto:
  #       condition: service_healthy
  #   ports:
  #     - "8081:8080"
  #   environment:
  #     MQTT_EXPLORER_CONFIG: |
  #       {
  #         "mqttServers": [
  #           {
  #             "id": "local",
  #             "name": "Local MQTT Broker",
  #             "server": "mosquitto",
  #             "port": 1883,
  #             "protocol": "mqtt"
  #           }
  #         ]
  #       }
  #   restart: unless-stopped

  # MQTT Bridge to Kafka (Optional - for integration with devices-service)
  mqtt-kafka-bridge:
    image: confluentinc/cp-kafka-connect:7.4.0
    container_name: mqtt-kafka-bridge
    depends_on:
      - mosquitto
    ports:
      - "8083:8083"
    environment:
      CONNECT_BOOTSTRAP_SERVERS: "kafka:9092"
      CONNECT_REST_PORT: 8083
      CONNECT_GROUP_ID: "mqtt-connect-group"
      CONNECT_CONFIG_STORAGE_TOPIC: "mqtt-connect-configs"
      CONNECT_OFFSET_STORAGE_TOPIC: "mqtt-connect-offsets"
      CONNECT_STATUS_STORATION_TOPIC: "mqtt-connect-status"
      CONNECT_KEY_CONVERTER: "org.apache.kafka.connect.storage.StringConverter"
      CONNECT_VALUE_CONVERTER: "org.apache.kafka.connect.storage.StringConverter"
      CONNECT_INTERNAL_KEY_CONVERTER: "org.apache.kafka.connect.storage.StringConverter"
      CONNECT_INTERNAL_VALUE_CONVERTER: "org.apache.kafka.connect.storage.StringConverter"
      CONNECT_LOG4J_ROOT_LOGLEVEL: "INFO"
      CONNECT_LOG4J_LOGGERS: "org.apache.kafka.connect.runtime.rest=WARN,org.apache.kafka.clients=WARN"
      CONNECT_PLUGIN_PATH: "/usr/share/java,/usr/share/confluent-hub-components"
    volumes:
      - ./kafka-connect-plugins:/usr/share/confluent-hub-components
    restart: unless-stopped

  # Redis (for caching MQTT messages and session management)
  redis:
    image: redis:7.2-alpine
    container_name: mqtt-redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3
    restart: unless-stopped

  # MongoDB (for storing MQTT message history)
  mongodb:
    image: mongo:7.0
    container_name: mqtt-mongodb
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password
      MONGO_INITDB_DATABASE: mqtt_service
    volumes:
      - mongodb-data:/data/db
      - ./mongodb-init:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 3
    restart: unless-stopped

volumes:
  redis-data:
    driver: local
  mongodb-data:
    driver: local

networks:
  default:
    name: mqtt-service-network
  smart-iot-kafka-network:
    external: true
